# ---------------------------------------------------------
#
# EggCatcherSK by Kron1K
# Capture mobs using chicken eggs
#
# ----------------------------------------------------------



# These are not configurable options.
# Please use config.yml in plugins/skript/EggCatcherSK to modify config options
options:
  version: 1.0
  reload-config: false
#
# End of options



# Functions
#
function debugMessage(message: text):
  if {EggCatcherSK.debug-mode} is true:
    send "%{EggCatcherSK.Prefix}%&7[&cDEBUG&7] %{_message}%" to the console
    
    
function errorMessage(message: text):
  send "%{EggCatcherSK.Prefix}%&7[&4ERROR&7] &c%{_message}%" to the console
    
    
function createConfig():
  set the header of "config" to "EggCatcherSK config. Delete this file to generate a new one." and "by Kron1K." and "Capture mobs using chicken eggs."
    
  set yaml value "version" from "config" to {@version}
  set the comments of yaml node "version" from "config" to "Script Version. Do not edit."
    
  set yaml value "debug-mode" from "config" to false
  set the comments of yaml node "debug-mode" from "config" to "Debug mode." and "Default: false"
    
  set yaml value "prefix" from "config" to "%{EggCatcherSK.Prefix}%"
  set the comments of yaml node "prefix" from "config" to "The prefix to be used in all chat and console messages." and "Default: &7[&bEggCatcherSK&7]"
    
  set yaml value "use-economy" from "config" to true
  set the comments of yaml node "use-economy" from "config" to "Set to true to charge players for each capture." and "Default: true"
    
  set yaml value "cost" from "config" to 100
  set the comments of yaml node "cost" from "config" to "The amount that a player will be charged to perform a capture." and "Default: 100"
    
  set yaml list "blacklist-worlds" from "config" to "world_nether" and "world_the_end"
  set the comments of yaml node "blacklist-worlds" from "config" to "Players will not be able to capture mobs in blacklisted worlds"
    
  set yaml list "exclude-cost-worlds" from "config" to " "
  set the comments of yaml node "exclude-cost-worlds" from "config" to "Captures will cost 0 in any worlds listed below."
    
  # Set default values on whether mobs can be captured or not
  set yaml value "mobs.chicken" from "config" to true
  set yaml value "mobs.cow" from "config" to true
  set yaml value "mobs.cod" from "config" to true
  set yaml value "mobs.dolphin" from "config" to true
  set yaml value "mobs.mooshroom" from "config" to true
  set yaml value "mobs.pig" from "config" to true
  set yaml value "mobs.polar bear" from "config" to true
  set yaml value "mobs.pufferfish" from "config" to true
  set yaml value "mobs.rabbit" from "config" to true
  set yaml value "mobs.salmon" from "config" to true
  set yaml value "mobs.sheep" from "config" to true
  set yaml value "mobs.squid" from "config" to true
  set yaml value "mobs.tropical fish" from "config" to true
  set yaml value "mobs.turtle" from "config" to true
  set yaml value "mobs.donkey" from "config" to true
  set yaml value "mobs.horse" from "config" to true
  set yaml value "mobs.mule" from "config" to true
  set yaml value "mobs.ocelot" from "config" to true
  set yaml value "mobs.parrot" from "config" to true
  set yaml value "mobs.wolf" from "config" to true
  set yaml value "mobs.llama" from "config" to true
    
  set yaml value "mobs.villager" from "config" to false
    
  set yaml value "mobs.bat" from "config" to false
  set yaml value "mobs.iron golem" from "config" to false
  set yaml value "mobs.snow golem" from "config" to false
  set yaml value "mobs.skeleton horse" from "config" to false
  set yaml value "mobs.undead horse" from "config" to false
    
  set yaml value "mobs.blaze" from "config" to false
  set yaml value "mobs.cave spider" from "config" to false
  set yaml value "mobs.creeper" from "config" to false
  set yaml value "mobs.drowned" from "config" to false
  set yaml value "mobs.elder guardian" from "config" to false
  set yaml value "mobs.enderman" from "config" to false
  set yaml value "mobs.endermite" from "config" to false
  set yaml value "mobs.evoker" from "config" to false
  set yaml value "mobs.ghast" from "config" to false
  set yaml value "mobs.guardian" from "config" to false
  set yaml value "mobs.husk" from "config" to false
  set yaml value "mobs.magma cube" from "config" to false
  set yaml value "mobs.phantom" from "config" to false
  set yaml value "mobs.zombie pigman" from "config" to false
  set yaml value "mobs.shulker" from "config" to false
  set yaml value "mobs.silverfish" from "config" to false
  set yaml value "mobs.skeleton" from "config" to false
  set yaml value "mobs.slime" from "config" to false
  set yaml value "mobs.spider" from "config" to false
  set yaml value "mobs.stray" from "config" to false
  set yaml value "mobs.vex" from "config" to false
  set yaml value "mobs.vindicator" from "config" to false
  set yaml value "mobs.witch" from "config" to false
  set yaml value "mobs.wither" from "config" to false
  set yaml value "mobs.wither skeleton" from "config" to false
  set yaml value "mobs.zombie" from "config" to false
  set yaml value "mobs.zombie villager" from "config" to false
    
  set the comments of yaml node "mobs" from "config" to "Set mob type to true or false to allow or disallow the ability to capture it."
    
  # Save the changes to file
  save yaml "config"
    
  send "%{EggCatcherSK.Prefix}% Config file has been created." to console
#
# End of functions
  
  
  
on load:
  # Load config file. Create it if it doesn't exist.
  load yaml "plugins/Skript/EggCatcherSK/config.yml" as "config"
  
  
  #Check and set debug mode based on the config file value
  set {_x} to yaml value "debug-mode" from "config"
  if {_x} is true:
    set {EggCatcherSK.Debug-Mode} to true
    debugMessage("Debug mode enabled")
  if {_x} is false:
    set {EggCatcherSK.Debug-Mode} to false
  if {_x} is not true or false:
    errorMessage("Debug-Mode variable was not equal to true or false")
  
  
  # Check if the config file has a prefix value so we can use it right away.
  # If it doesnt exist, default prefix will be used.
  if yaml path "prefix" in "config" has value:
    set {EggCatcherSK.Prefix} to yaml value "prefix" from "config"
  else:
    set {EggCatcherSK.Prefix} to "&7[&bEggCatcherSK&7]"


  send "%{EggCatcherSK.Prefix}% Loading EggCatcherSK..." to console


  # If config file is empty or {@reload-config} is true, populate it.
  if yaml "config" is empty:
    send "%{EggCatcherSK.Prefix}% No config found! Creating it..." to console
    createConfig()
    
  if {@reload-config} is true:
    send "%{EggCatcherSK.Prefix}% reload-config option set to true! Re-creating config file..." to console
    createConfig()
    
    
  # Check & set the config file version number
  set {_x} to yaml value "version" from "config"
  if {_x} is not {@version}:
    errorMessage("The config file version number did not match the version number of the script! Editing the config file version number to match the script version number.")
    set yaml value "version" from "config" to {@version}
    set the comments of yaml node "version" from "config" to "Script Version. Do not edit."
    save yaml "config"
    
    
  # Create list variable of all config options from config.yml. Clear it first just to be safe.
  clear {EggCatcherSK.ConfigOptions::*}
  set {EggCatcherSK.ConfigOptions::*} to all yaml nodes of "config"
  
  
  # Create list variable of all mobs
  #
  # Clear the variable. Should maybe be removed and the variable should not be added to on every load.
  clear {EggCatcherSK.Mobs::*}
  
  
  # Check all mob config options
  loop {EggCatcherSK.ConfigOptions::*}:
    if loop-value contains "mobs.":
      set {_x} to yaml value "%loop-value%" from "config"
      
      # If mob config option is true, get the name of the mob by removing the "mob." part of the config node
      if {_x} is true:
        set {_z} to subtext of loop-value from characters 6 to (the length of loop-value - 0)
        
        # Add the mob to the list variable
        add {_z} parsed as entity type to {EggCatcherSK.Mobs::*}
  
  # DEBUG
  debugMessage("Mobs variable contains: %{EggCatcherSK.Mobs::*}%")



# Start of actual skript to capture mobs
# Call the event only if an egg is thrown and causes damage
on damage:
  if damage was caused by projectile:
    if event-projectile is egg:
    
      # Check the mobs variable. If mob option is set to true capture the mob, if not send an error message
      loop {EggCatcherSK.Mobs::*}:
      
        # If victim is a player, cancel the entire loop.
        if victim is a player:
          stop
      
      
        # If victim was added to Mobs variable
        if victim is loop-value:
          # Cancel the damage
          cancel event
          
          debugMessage("Victim was in the Mobs variables. Victim is %victim% with loop value of %loop-value%")
          
          # We found the mob in the mob variable. This means the mob option is set to true and we can capture the mob.
          #
          # TODO. World checks. economy checks. etc
          #
          # Create spawn egg of the same type as the victim mob and drop it at its location
          set {_drop} to "%loop-value% spawn egg" parsed as item type
          drop {_drop}
          
          delete victim
          
          # Send the message now or the wrong message will be sent
          set {_message} to "%{EggCatcherSK.Prefix}% You captured the mob."
          send "%{_message}%" to the attacker
          
          # We must stop the loop so it doesnt continue to check all the mobs and then set the wrong message
          stop
          
          
        # If victim is not a player and was not added to the mobs variable. Continue the loop to keep checking for the mob in the mob variable.
        if victim is not loop-value:
          # Set the message to be sent if the mob was not in the mob variable
          set {_message} to "%{EggCatcherSK.Prefix}% You cannot capture this mob."
      
      # Message to be sent if the mob was not in the mob variable. Executed outside the loop since we do not stop the loop
      # if victim did not match a mob in the mob variable
      send "%{_message}%" to the attacker
          
       
        
        
        

